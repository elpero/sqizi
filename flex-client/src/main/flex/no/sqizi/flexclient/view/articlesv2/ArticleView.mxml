<?xml version="1.0" ?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:components="no.sqizi.flexclient.view.components.*"
         creationComplete="handleCreationComplete()"
         alpha="0.8"
         width="500"
         borderStyle="solid"
         borderColor="#000000"
         borderThickness="0"
        >


    <mx:Text id="header"
             fontSize="16"
             fontWeight="bold"
             text="{_articleModel.article.title}" width="100%"/>
    <mx:Text id="added"
             width="100%"
             fontStyle="italic"
             text="Added on {_articleModel.article.date} by {_articleModel.article.author.firstName} {_articleModel.article.author.lastName}"/>
    <mx:TextArea
            id="content"
            verticalScrollPolicy="on"
            editable="false"
            backgroundAlpha="0"
            color="black"
            fontFamily="Arial"
            fontSize="12"
            borderThickness="0"
            htmlText="{_articleModel.article.content}"
            width="100%"/>
    <components:ImageBrowser imageCollection="{_articleModel.images}" direction="horizontal"/>
    <mx:VBox width="100%" horizontalAlign="right">
        <mx:Button id="closeButton" label="Close" click="PopUpManager.removePopUp(this)"/>
    </mx:VBox>

    <mx:Parallel id="changeEffect">
        <mx:Fade id="showUpEffect" alphaFrom="0" alphaTo="1" duration="1200"/>
        <mx:Blur id="unBlurEffect" blurXFrom="20" blurYFrom="20" blurXTo="0" blurYTo="0" duration="1200"/>
    </mx:Parallel>


    <mx:Script><![CDATA[
        import mx.binding.utils.BindingUtils;
        import mx.managers.PopUpManager;

        import no.sqizi.flexclient.model.ArticleModel;
        import no.sqizi.flexclient.model.CompanyModel;
        import no.sqizi.flexclient.model.UserModel;
        import no.sqizi.flexclient.view.articles.AddCategoryView;
        import no.sqizi.flexclient.view.articles.addarticlewizard.AddArticleView;

        [Bindable]
        [Autowire(bean="articleModel")]
        public var _articleModel:ArticleModel;


        private function handleArticleModelChange(value:*):void {
            changeEffect.play([this]);
        }

        private function handleCreationComplete():void {
            BindingUtils.bindSetter(handleArticleModelChange, _articleModel, "article");
        }


        ]]></mx:Script>
</mx:VBox>